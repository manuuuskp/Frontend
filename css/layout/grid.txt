display: grid;

grid-template-columns: 
                    [col-start] 1fr [second-col] 1fr [third-col] 1fr [last-col]
                    repeat(3, 1fr [col-start])

grid-template-rows:
                    [row-start] 25% [second-row] auto [third] 300px [end]

grid-template-area: "header header header
                     main main .
                     footer footer footer"

.item-a {
    grid-area: header
}

.item-b {
    grid-area: main
}

.item-c {
    grid-area: footer
}

fr - is the fraction of the free space available

column-gap: 25px;
row-gap: 25px;
(or)
gap : row-gap/column-gap

justify-items: center | stretch | start | end //aligns along the row axis
align-items: center | stretch | start | end //aligns along the column axis
place-items: align-items/justify-items

justify-content: center | start | end | space-between | space-evenly | space-around //same as justify content of flex
align-content: center | start | end | space-between | space-evenly //same as align items of the flex
place-content: align-content/justify-content

grid-auto-columns: 60px
grid-auto-rows: 60px 
//provides size of the implicit rows and columns

.item-a {
    grid-column: 1/2;
    grid-row: 2/3;
}

.item-b {
    grid-column: 5/6;
    grid-row: 2/3
}

grid-auto-columns: 50px //will provide us the 50px width of the implicit columns 


=====================

grid-column: start/end
grid-row: start/end
grid-area: row-start/column-start/row-end/column-end;

justify-self: center | start | end | stretch
align-self: center | start | end | stretch
place-self: align-self/justify-self

minmax(min, max) - sets the min width and maximum width;
repeat(num of times, width) || repeat(8, minmax(100px, 1fr));